/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package backup;

import com.jcraft.jsch.ChannelSftp.LsEntry;
import com.jcraft.jsch.JSchException;
import com.jcraft.jsch.SftpException;
import java.awt.BorderLayout;
import java.awt.Color;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;

/**
 *
 * @author Nitish Kumar
 */
public class client extends javax.swing.JFrame {

    /**
     * Creates new form client
     */
    static String UserID,passw;
  
    public client(String s) {
        if(s.equals("NULL"))
{
    JOptionPane.showMessageDialog(rootPane, "SOMETHING ERROR .");
    setVisible(false);
}
        System.out.println("here " + s);
        int i=0;
        String user="";
        while(true)
        {System.out.println("stat "+i);
            if(s.substring(i,i+1).equals(","))
            {
                System.out.println("here4444 " + i);
                i++;
                break;
            }else{
                System.out.println("here " + user);
                user=user+s.substring(i,i+1);
                i++;
            }
        }
         System.out.println("here1 " + user);
        UserID=user;
        passw=s.substring(i);
         System.out.println("here 2 " + passw);
        System.out.println("-y-- "+UserID);
        initComponents();
        phome.setBackground(new Color(0,0,0,50));
        profilep.setVisible(false);
    }

     public String getPassword()
   {
       
       String pass = passw;
       MD5 md = new MD5();
       return md.getMd5(pass).substring(0, 16);
   }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jScrollPane2 = new javax.swing.JScrollPane();
        logout = new javax.swing.JLabel();
        home1 = new javax.swing.JLabel();
        list = new javax.swing.JLabel();
        profile = new javax.swing.JLabel();
        phome = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        profilep = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Name = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        email = new javax.swing.JLabel();
        Userid = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        mobile = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        allocated = new javax.swing.JLabel();
        used = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        profilep1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        Name1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        email1 = new javax.swing.JLabel();
        Userid1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        mobile1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        allocated1 = new javax.swing.JLabel();
        used1 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        feedb = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CLIENT DASHBOARD");
        setPreferredSize(new java.awt.Dimension(977, 515));
        setResizable(false);
        setSize(new java.awt.Dimension(977, 515));
        getContentPane().setLayout(null);

        logout.setBackground(new java.awt.Color(0, 102, 255));
        logout.setFont(new java.awt.Font("Segoe UI Semibold", 1, 28)); // NOI18N
        logout.setForeground(new java.awt.Color(0, 0, 255));
        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/logout-1-128.png"))); // NOI18N
        logout.setText("Log Out");
        logout.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 255), 2, true));
        logout.setOpaque(true);
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                logoutMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                logoutMouseReleased(evt);
            }
        });
        logout.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                logoutKeyPressed(evt);
            }
        });
        getContentPane().add(logout);
        logout.setBounds(740, 20, 160, 47);

        home1.setBackground(new java.awt.Color(0, 102, 255));
        home1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 28)); // NOI18N
        home1.setForeground(new java.awt.Color(0, 0, 255));
        home1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/home.png"))); // NOI18N
        home1.setText("Home");
        home1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 255), 2, true));
        home1.setOpaque(true);
        home1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                home1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                home1MouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                home1MouseClicked(evt);
            }
        });
        getContentPane().add(home1);
        home1.setBounds(110, 20, 140, 47);

        list.setBackground(new java.awt.Color(0, 102, 255));
        list.setFont(new java.awt.Font("Segoe UI Semibold", 1, 28)); // NOI18N
        list.setForeground(new java.awt.Color(0, 0, 255));
        list.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/list.png"))); // NOI18N
        list.setText("List Files");
        list.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 255), 2, true));
        list.setOpaque(true);
        list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                listMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                listMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMouseClicked(evt);
            }
        });
        getContentPane().add(list);
        list.setBounds(250, 20, 170, 47);

        profile.setBackground(new java.awt.Color(0, 102, 255));
        profile.setFont(new java.awt.Font("Segoe UI Semibold", 1, 28)); // NOI18N
        profile.setForeground(new java.awt.Color(0, 0, 255));
        profile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/photo.png"))); // NOI18N
        profile.setText("Profile");
        profile.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 255), 2, true));
        profile.setOpaque(true);
        profile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                profileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                profileMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileMouseClicked(evt);
            }
        });
        getContentPane().add(profile);
        profile.setBounds(420, 20, 140, 47);

        phome.setBackground(new java.awt.Color(102, 255, 255));

        jButton3.setText("Upload Files");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/upload.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/delete.jpg"))); // NOI18N

        jButton4.setText("Delete Files");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/download.jpg"))); // NOI18N

        jButton2.setText("Download Files");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout phomeLayout = new javax.swing.GroupLayout(phome);
        phome.setLayout(phomeLayout);
        phomeLayout.setHorizontalGroup(
            phomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(phomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        phomeLayout.setVerticalGroup(
            phomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(phomeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(phomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(phomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(phome);
        phome.setBounds(20, 80, 940, 400);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel5.setText("User Profile");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Name :-");

        Name.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        Name.setForeground(new java.awt.Color(0, 51, 51));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Email Id :-");

        email.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        email.setForeground(new java.awt.Color(0, 51, 51));

        Userid.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        Userid.setForeground(new java.awt.Color(0, 51, 51));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("User Id :-");

        mobile.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        mobile.setForeground(new java.awt.Color(0, 51, 51));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Mobile :-");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Allocated Size :-");

        allocated.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        allocated.setForeground(new java.awt.Color(0, 51, 51));

        used.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        used.setForeground(new java.awt.Color(0, 51, 51));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("Size Used :-");

        profilep1.setBackground(new java.awt.Color(102, 102, 255));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel12.setText("User Profile");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 51));
        jLabel13.setText("Name :-");

        Name1.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        Name1.setForeground(new java.awt.Color(0, 51, 51));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 51, 51));
        jLabel14.setText("Email Id :-");

        email1.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        email1.setForeground(new java.awt.Color(0, 51, 51));

        Userid1.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        Userid1.setForeground(new java.awt.Color(0, 51, 51));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 51, 51));
        jLabel15.setText("User Id :-");

        mobile1.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        mobile1.setForeground(new java.awt.Color(0, 51, 51));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 51, 51));
        jLabel16.setText("Mobile :-");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 51));
        jLabel17.setText("Allocated Size :-");

        allocated1.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        allocated1.setForeground(new java.awt.Color(0, 51, 51));

        used1.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        used1.setForeground(new java.awt.Color(0, 51, 51));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 51, 51));
        jLabel18.setText("Size Used :-");

        javax.swing.GroupLayout profilep1Layout = new javax.swing.GroupLayout(profilep1);
        profilep1.setLayout(profilep1Layout);
        profilep1Layout.setHorizontalGroup(
            profilep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilep1Layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addGroup(profilep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(profilep1Layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(used1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(profilep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(profilep1Layout.createSequentialGroup()
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(allocated1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(profilep1Layout.createSequentialGroup()
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31)
                            .addComponent(mobile1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(profilep1Layout.createSequentialGroup()
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31)
                            .addComponent(Userid1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(profilep1Layout.createSequentialGroup()
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31)
                            .addComponent(email1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(profilep1Layout.createSequentialGroup()
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31)
                            .addGroup(profilep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Name1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(305, Short.MAX_VALUE))
        );
        profilep1Layout.setVerticalGroup(
            profilep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilep1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(profilep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(Name1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profilep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(email1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profilep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Userid1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profilep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mobile1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profilep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(allocated1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profilep1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(used1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout profilepLayout = new javax.swing.GroupLayout(profilep);
        profilep.setLayout(profilepLayout);
        profilepLayout.setHorizontalGroup(
            profilepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilepLayout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addGroup(profilepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(profilepLayout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(used, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(profilepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(profilepLayout.createSequentialGroup()
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(allocated, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(profilepLayout.createSequentialGroup()
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31)
                            .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(profilepLayout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31)
                            .addComponent(Userid, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(profilepLayout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(profilepLayout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31)
                            .addGroup(profilepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(305, Short.MAX_VALUE))
            .addGroup(profilepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(profilepLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(profilep1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        profilepLayout.setVerticalGroup(
            profilepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilepLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(profilepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profilepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profilepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Userid, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profilepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profilepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(allocated, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profilepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(used, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(60, Short.MAX_VALUE))
            .addGroup(profilepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(profilepLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(profilep1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getContentPane().add(profilep);
        profilep.setBounds(30, 540, 940, 400);

        feedb.setBackground(new java.awt.Color(0, 102, 255));
        feedb.setFont(new java.awt.Font("Segoe UI Semibold", 1, 28)); // NOI18N
        feedb.setForeground(new java.awt.Color(0, 0, 255));
        feedb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/feedback.png"))); // NOI18N
        feedb.setText("Feedback");
        feedb.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 255), 2, true));
        feedb.setOpaque(true);
        feedb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                feedbMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                feedbMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                feedbMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                feedbMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                feedbMouseClicked(evt);
            }
        });
        feedb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                feedbKeyPressed(evt);
            }
        });
        getContentPane().add(feedb);
        feedb.setBounds(560, 20, 180, 47);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/cloud.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 980, 520);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void home1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_home1MouseEntered
        home1.setBackground(new Color(0,0,255));
        home1.setForeground(new Color(255,255,255));
        
    }//GEN-LAST:event_home1MouseEntered

    private void listMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMouseEntered
         list.setBackground(new Color(0,0,255));
        list.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_listMouseEntered

    private void listMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMouseExited
       list.setBackground(new Color(0,102,255));
        list.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_listMouseExited

    private void home1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_home1MouseExited
        // TODO add your handling code here:
        home1.setBackground(new Color(0,102,255));
        home1.setForeground(new Color(0,0,0));
        
        
    }//GEN-LAST:event_home1MouseExited

    private void profileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileMouseEntered
        // TODO add your handling code here:
         profile.setBackground(new Color(0,0,255));
        profile.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_profileMouseEntered

    private void logoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseEntered
        // TODO add your handling code here:
         logout.setBackground(new Color(0,0,255));
        logout.setForeground(new Color(255,255,255));
        
    }//GEN-LAST:event_logoutMouseEntered

    private void profileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileMouseExited
        // TODO add your handling code here:
         profile.setBackground(new Color(0,102,255));
        profile.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_profileMouseExited

    private void logoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseExited
        // TODO add your handling code here:
         logout.setBackground(new Color(0,102,255));
        logout.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_logoutMouseExited
  DefaultMutableTreeNode nroot;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
Connection Con;
if(UserID.equals("NULL"))
{
    JOptionPane.showMessageDialog(rootPane, "SOMETHING ERROR .");
    return ;
}
        try {
            Con = ConnectDB.connect();
             Statement st=Con.createStatement();     
                    ResultSet  rs=st.executeQuery("SELECT * FROM `servers` WHERE Sr_no=1  "); 
                    
                   if( rs.next()){
                         if(sftp.connect(rs.getString("server_ip"),rs.getInt("server_port") , rs.getString("server_user"), rs.getString("server_pass")))
                     {
                           String remotePath = rs.getString("server_path")+UserID;
                            nroot = new DefaultMutableTreeNode(remotePath);
                            try {
                    sftp.cargarRTree(remotePath, nroot);
                     System.out.println("8888");
                 } catch (SftpException e1) {
                // TODO Auto-generated catch block
                }   catch (JSchException ex) { 
                  Logger.getLogger(SecureBag.class.getName()).log(Level.SEVERE, null, ex);
                }
                          System.out.println("help");
                            RemoteDirJFrame rem = new RemoteDirJFrame(nroot,"DOWNLOAD YOUR FILE");
                             rem.getConnection(sftp);
                             rem.initpa(passw,UserID);
                             rem.setVisible(true);
                           
                         
                         
                     }
                   }
                    
                    
                    
        } catch (Exception ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
                       
        
        
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed
 String spath;
  /* DefaultMutableTreeNode nroot,nroot1;
    private void update(String message) throws JSchException, SftpException
    {
        String remotePath = spath; 
        nroot1 = new DefaultMutableTreeNode(remotePath);
                
                try {
                    sftp.cargarRTree(remotePath, nroot1);
                 }catch (SftpException e1) {
                // TODO Auto-generated catch block
                }
        //Logger.getLogger(SimpleLinuxGUI.class.getName()).log(Level.SEVERE, null, ex);
        RemoteDirJFrame frame = new  RemoteDirJFrame(nroot1);
        frame.setText(message);
        frame.getConnection(sftp);
        frame.setVisible(true);
        this.setVisible(false);
    }
    */
      backup.SFTPBean sftp = new backup.SFTPBean();
              private JFileChooser openFileChooser;
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        if(UserID.equals("NULL"))
{
    JOptionPane.showMessageDialog(rootPane, "SOMETHING ERROR .");
    return ;
}
        PreparedStatement ps;Connection Con=null ;
         Statement st;
        try {
            Con= ConnectDB.connect();
            st = Con.createStatement();
              ResultSet ty=st.executeQuery("SELECT * from regis_app where UserID='"+UserID+"'");
              if(ty.next())
              {
                  if(ty.getLong("size_used") > ty.getLong("allocate_size"))
                  {
                      JOptionPane.showMessageDialog(rootPane, "Sorry: You Exceeded Allocated Size,Please Buy Space.");
                      Con.close();
                      return;
                      
                  }
              }
              
              
              
              
        } catch (Exception ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
           
        
        
        
        
       
        openFileChooser = new JFileChooser();
           int returnValue = openFileChooser.showOpenDialog(this);
          
       if(returnValue == JFileChooser.APPROVE_OPTION){  
           try {
                 
                  JOptionPane.showMessageDialog(rootPane, openFileChooser.getSelectedFile().getAbsolutePath());
                 //For encrypting
                 File inputFile = openFileChooser.getSelectedFile();
                   
                 String fileName = inputFile.getName()+".encrypted";
                    
                 File encryptedFile = new File(fileName);
                 String key = getPassword();
                 Long sized=0L;
                 CryptoUtils.encrypt(key, inputFile, encryptedFile);
                
                 st=Con.createStatement();
                 
                    ResultSet  rs=st.executeQuery("SELECT * FROM servers ");
                     
                       int i=0;
                    while(rs.next()) {
                        
                         if(sftp.connect(rs.getString("server_ip"),rs.getInt("server_port") , rs.getString("server_user"), rs.getString("server_pass")))
                     {
                           
                         spath=rs.getString("server_path");
                         spath=spath+UserID+"/";
                         
                          if(sftp.uploadFile(encryptedFile.getAbsolutePath(),spath+fileName)) {
                       
                        i=1;
                        
                          }
                     }
                         
                         sized=sftp.sizeConsumed(spath);
                         
                         sftp.close();
                         
                        
                    }
                    encryptedFile.delete();
                   ps=Con.prepareStatement("insert into log(userid,action,time) value(?,?,?)");
                     
                 ps.setString(1, UserID);
                     if(i==1){
                         
                         
                 ps.setString(2,"Upload File, File Name: "+ fileName);
                 
                         
                         JOptionPane.showMessageDialog(rootPane, "Upload Successful ");
                    
                          }else {
                    ps.setString(2,"Upload Failed , File Name: "+ fileName);
                         JOptionPane.showMessageDialog(rootPane, "Upload Failed ");
                         }
                     
                     LocalDateTime myDateObj = LocalDateTime.now();
                DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");
                ps.setString(3, myDateObj.format(myFormatObj));
                ps.execute();
                ps=Con.prepareStatement("UPDATE `regis_app` SET `size_used`='"+sized+"' where`UserID`='"+UserID+"'");
                 ps.execute();
                 
       }catch(Exception e)
       {
           JOptionPane.showMessageDialog(rootPane, e);
       }
       }else{
          
            JOptionPane.showMessageDialog(rootPane, "Error: You have not choosen any File.");
       }
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
Connection Con;
if(UserID.equals("NULL"))
{
    JOptionPane.showMessageDialog(rootPane, "SOMETHING ERROR .");
    return ;
}
        try {
            Con = ConnectDB.connect();
             Statement st=Con.createStatement();     
                    ResultSet  rs=st.executeQuery("SELECT * FROM `servers` WHERE Sr_no=1  "); 
                    
                   if( rs.next()){
                         if(sftp.connect(rs.getString("server_ip"),rs.getInt("server_port") , rs.getString("server_user"), rs.getString("server_pass")))
                     {
                           String remotePath = rs.getString("server_path")+UserID;
                            nroot = new DefaultMutableTreeNode(remotePath);
                            try {
                    sftp.cargarRTree(remotePath, nroot);
                     System.out.println("8888");
                 } catch (SftpException e1) {
                // TODO Auto-generated catch block
                }   catch (JSchException ex) { 
                  Logger.getLogger(SecureBag.class.getName()).log(Level.SEVERE, null, ex);
                }
                          System.out.println("help");
                            RemoteDirJFrame rem = new RemoteDirJFrame(nroot,"DELETE YOUR FILE");
                             rem.getConnection(sftp);
                             rem.initpa(passw,UserID);
                             rem.setVisible(true);
                           
                         
                         
                     }
                   }
                    
                    
                    
        } catch (Exception ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
               
        
        }   
        
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void logoutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_logoutKeyPressed
       
    }//GEN-LAST:event_logoutKeyPressed

    private void logoutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMousePressed
       
    
    }//GEN-LAST:event_logoutMousePressed

    private void logoutMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseReleased
        // TODO add your handling code here:
            setVisible(false);
       new Front().setVisible(true);
    }//GEN-LAST:event_logoutMouseReleased

    private void profileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileMouseClicked
       
      
        
        phome.setVisible(false);
        
        try {
            Connection Con= ConnectDB.connect();
             Statement st=Con.createStatement();
             ResultSet ty=st.executeQuery("SELECT * from regis_app where UserID='"+UserID+"'");
            if(ty.next())
            {
                Name.setText(ty.getString("name"));
                email.setText(ty.getString("email"));
                Userid.setText(ty.getString("UserID"));
                mobile.setText(""+ty.getLong("Mobile"));
                allocated.setText(ty.getLong("allocate_size")+" KB");
                used.setText(ty.getLong("size_used")+" KB");
            }
            
            Con.close();
              profilep.setLocation(20, 80);
                phome.setVisible(false);
               
            profilep.setVisible(true);
          
            
        } catch (Exception ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
 
        
        
        
    }//GEN-LAST:event_profileMouseClicked

    private void home1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_home1MouseClicked
        profilep.setVisible(false);
       
     
        phome.setVisible(true);
    }//GEN-LAST:event_home1MouseClicked
DefaultTableModel model;
public void showTableData()
{

//JPannel frame1 = new JFrame("Database Search Result");//
//frame1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
 //backup.SFTPBean sftp = new backup.SFTPBean();
//sharep.setLayout(new BorderLayout());
 model = new DefaultTableModel();
String[] columnNames = {"Sr No.","File Name","Size","Date"};


model.setColumnIdentifiers(columnNames);
//JTable table = new JTable();

//JScrollPane scroll = new JScrollPane();
//listfiles.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
//listfiles.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
//table.setBounds(10, 10, 800, 300);
String name= "";
String date = "";
long size = 0;
int i=0;
try
{ 
     Connection Con= ConnectDB.connect();
             Statement st=Con.createStatement();String filen="";
             ResultSet ty=st.executeQuery("SELECT * from servers where Sr_no='"+1+"'");
             if(ty.next())
             {
                 filen=ty.getString("server_path");
                 filen=filen+UserID+"/";
             }
             System.out.println("ggg "+filen);
              sftp.connect(ty.getString("server_ip"),ty.getInt("server_port") , ty.getString("server_user"), ty.getString("server_pass"));
                     
    
    
    Vector<LsEntry> list = sftp.listFile(filen);
  int j;  
for (LsEntry item : list)
{
 j=i+1;
name = item.getFilename();
size = item.getAttrs().getSize();
double size1 = (double)size/1024;
date = item.getAttrs().getAtimeString();
model.addRow(new Object[]{j,name,size1,date});
System.out.println("- " +name);
i++; 
}
if(i <1)
{
JOptionPane.showMessageDialog(null, "No Record Found","Error",JOptionPane.ERROR_MESSAGE);
}
if(i ==1)
{
System.out.println(i+" Record Found");
}
else
{
System.out.println(i+" Records Found");
}
}
catch(Exception ex)
{
     JOptionPane.showMessageDialog(rootPane, "Error: "+ex);
//JOptionPane.showMessageDialog(, ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
}


//listfiles.getViewport().add(table);
//listfiles.add(scroll,BorderLayout.CENTER);

}
public void showTableData1()
{

JFrame frame1 = new JFrame("Your Data Files");
frame1.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);

frame1.setLayout(new BorderLayout());
DefaultTableModel model = new DefaultTableModel();
String[] columnNames = {"Sr No","File Name","Size(KB)","Date"};

model.setColumnIdentifiers(columnNames);
JTable table = new JTable();
table.setModel(model); 
table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
table.setFillsViewportHeight(true);
JScrollPane scroll = new JScrollPane(table);
scroll.setHorizontalScrollBarPolicy(
JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);

String name= "";
String date = "";
long size = 0;
int i=0;
try
{ 
    Connection Con= ConnectDB.connect();
             Statement st=Con.createStatement();String filen="";
             ResultSet ty=st.executeQuery("SELECT * from servers where Sr_no='"+1+"'");
             if(ty.next())
             {
                 filen=ty.getString("server_path");
                 filen=filen+UserID+"/";
             }
             System.out.println("ggg "+filen);
              sftp.connect(ty.getString("server_ip"),ty.getInt("server_port") , ty.getString("server_user"), ty.getString("server_pass"));
     
    Vector<LsEntry> list = sftp.listFile(filen);
    int j;
for (LsEntry item : list)
{
j=i+1;
name = item.getFilename();
size = item.getAttrs().getSize();
double size1 = (double)size/1024;
date = item.getAttrs().getAtimeString();
model.addRow(new Object[]{j,name,size1,date});
i++; 
}
if(i <1)
{
JOptionPane.showMessageDialog(null, "No Record Found","Error",
JOptionPane.ERROR_MESSAGE);
return ;
}
if(i ==1)
{
System.out.println(i+" Record Found");
}
else
{
System.out.println(i+" Records Found");
}
}
catch(Exception ex)
{
JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",
JOptionPane.ERROR_MESSAGE);
}
frame1.add(scroll);
frame1.setVisible(true);
frame1.setSize(600,400);
}

    
    private void listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMouseClicked
showTableData1();
        
        /*phome.setVisible(false);
        
table.setVisible(true);
profilep.setVisible(false);
listfiles.setLocation(20,80);
System.out.println("sdfhkvvvvvvvvvvvvvds");
phome.setVisible(false);
listfiles.setVisible(true);*/
        
        
    }//GEN-LAST:event_listMouseClicked

    private void feedbMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbMouseEntered
         feedb.setBackground(new Color(0,0,255));
        feedb.setForeground(new Color(255,255,255));
        
    }//GEN-LAST:event_feedbMouseEntered

    private void feedbMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbMouseExited
        // TODO add your handling code here:
         feedb.setBackground(new Color(0,102,255));
        feedb.setForeground(new Color(0,0,0));
        
    }//GEN-LAST:event_feedbMouseExited

    private void feedbMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_feedbMousePressed

    private void feedbMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_feedbMouseReleased

    private void feedbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_feedbKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_feedbKeyPressed

    private void feedbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feedbMouseClicked
        // TODO add your handling code here:

               new feedback(UserID).setVisible(true);
   
    }//GEN-LAST:event_feedbMouseClicked

    /**
     * @param args the command line arguments
     */

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html          */
 
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new client("NULL").setVisible(true);
                System.out.println(UserID);
            }
        });
    }


    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Name;
    private javax.swing.JLabel Name1;
    private javax.swing.JLabel Userid;
    private javax.swing.JLabel Userid1;
    private javax.swing.JLabel allocated;
    private javax.swing.JLabel allocated1;
    private javax.swing.JLabel email;
    private javax.swing.JLabel email1;
    private javax.swing.JLabel feedb;
    private javax.swing.JLabel home1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel list;
    private javax.swing.JLabel logout;
    private javax.swing.JLabel mobile;
    private javax.swing.JLabel mobile1;
    private javax.swing.JPanel phome;
    private javax.swing.JLabel profile;
    private javax.swing.JPanel profilep;
    private javax.swing.JPanel profilep1;
    private javax.swing.JLabel used;
    private javax.swing.JLabel used1;
    // End of variables declaration//GEN-END:variables
}
